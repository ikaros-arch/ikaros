# Environmental Variables used by docker-comppose.yml for the Ikaros Recording app
#
# Docker Compose vars
COMPOSE_PROJECT_NAME=ikaros
COMPOSE_PROFILES=dev,prod

# Postgres env vars

# Currently handling this in the Makefile, but leaving these as fallback.
# If running on x64-architecture:
# POSTGRES_IMAGE="postgis/postgis:16-3.4"
# If running on arm64:
# POSTGRES_IMAGE="nickblah/postgis:16-postgis-3.4"

POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# pgAdmin env vars
PGADMIN_DEFAULT_EMAIL=postgres@domain.org
PGADMIN_DEFAULT_PASSWORD=postgres
PGADMIN_CONFIG_LOGIN_BANNER='"<h4>Ikaros Recording<h4><br><p>Database backend service</p>"'
PGADMIN_CONFIG_SERVER_MODE=True
PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=True
PGADMIN_CONFIG_AUTHENTICATION_SOURCES="['oauth2', 'internal']"
PGADMIN_CONFIG_OAUTH2_AUTO_CREATE_USER=True
PGADMIN_CONFIG_OAUTH2_CONFIG="[{
    'OAUTH2_NAME': 'KeyCloak',
    'OAUTH2_DISPLAY_NAME': 'KeyCloak',
    'OAUTH2_CLIENT_ID': 'pgadmin',
    'OAUTH2_CLIENT_SECRET': '',
    'OAUTH2_TOKEN_URL': 'https://mykeycloak/auth/realms/myrealm/protocol/openid-connect/token',
    'OAUTH2_AUTHORIZATION_URL': 'https:/mykeycloak/auth/realms/myrealm/protocol/openid-connect/auth',
    'OAUTH2_API_BASE_URL': 'https://mykeycloak/realms/datahub/',
    'OAUTH2_USERINFO_ENDPOINT': 'https://mykeycloak/auth/realms/myrealm/protocol/openid-connect/userinfo',
    'OAUTH2_SCOPE': 'openid email profile',
    'OAUTH2_BUTTON_COLOR': '#51c65b;',
    'OAUTH2_SERVER_METADATA_URL': 'https://mykeycloak/auth/realms/myrealm/.well-known/openid-configuration'
}]"
PGADMIN_PORT=5050

# PostgREST env vvars
PGRST_AUTH_ROLE=authenticator
PGRST_AUTH_PASSWORD=ChangeMe
PGRST_DB_URI=postgres://postgres:5432/data
PGRST_DB_SCHEMA=api
PGRST_DB_ANON_ROLE=anonymous
PGRST_SERVER_PROXY_URI="http://127.0.0.1:3000/"
PGRST_JWT_SECRET='{"kty":"RSA","e":"AQAB","kid":"62a2b786-612d-4eab-88e1-0c680cbd7897","n":"m3b8CIzl4f0wInA_lMCN_qWqAxzrQCgWsSs-EtBLoSxfC8CmKGqzPcDiYBwJ-W-QQQM04afRpfEcD1l5Veq49X6dBNlXMMlJbGbCzmxCYtf9G-pDGMfMbxpQUDYHTGtEhcPTMJa5Dqu7Hzt-Zqreb1-ifM6SA_y92ageMTM3_-K4_oaMvn7dxlO9YpUQtazhb7sYqtC78Sa732J4tPzz1v4GBlfjgt3MvBtgVZwhlLVlAdxUj9b6wIj_kIYnfK74mE6_e4s2QmiO_pS6tlS2neGemtUY_UfpNJzpJXPXvcPJNU3dibuV34vhiPKjUJVPfQOriQ656ZNPj_vPweFfRw"}'
PGRST_ROLE_CLAIM_KEY='.resource_access.ikaros.roles[0]'
PGRST_PORT=3000
PGRST_ADMIN_SERVER_PORT=3001

# Keycloak env vars
JAVA_OPTS_APPEND='-Dkeycloak.profile.feature.upload_scripts=enabled'
KC_DB_PASSWORD=postgres
KC_DB_URL='jdbc:postgresql://postgres/keycloak'
KC_DB_USERNAME=postgres
KC_HEALTH_ENABLED='true'
#	KC_HTTP_ENABLED='true'
KC_METRICS_ENABLED='true'
#	KC_HOSTNAME=keycloak.com.au
#	KC_HOSTNAME_PORT=8180
KC_HOSTNAME_URL=https://apps.drosopoulou.net/auth/
#	KC_HOSTNAME_PATH=/auth
KC_HOSTNAME_ADMIN_URL=https://apps.drosopoulou.net/auth/
#	KC_HTTP_RELATIVE_PATH=/auth
KC_PROXY=edge
KC_HOSTNAME_STRICT='false'
#	KC_HOSTNAME_STRICT_HTTPS='false'
#	KC_HOSTNAME_STRICT_BACKCHANNEL='true'  
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=ChangeMe
KC_PORT=8180
KC_DEBUG_PORT=8787

# IIPImage Server env vars
build_tag=iipsrv

iipsrv_version=1.2
iipsrv_commit=d978bfde03955150bbc9fee37836d3fa52763a7a
iipsrv_sha256=ef7427b790f427654429aa2a198998f22df1026b9698746070ba400095033626

# Ikaros node.js app env vars

IKAROS_DOCKERFILE=Dockerfile.app
IKAROS_ONLINE=true
IKAROS_MODULES=["survey"]
IKAROS_TITLE="Ikaros Recording"
IKAROS_APP="survey"
IKAROS_DESCRIPTION="The Ikaros Recording online database"
IKAROS_DB_API=https://app.ikarosarchaeology.com/api/
IKAROS_DOMAIN=https://app.ikarosarchaeology.com
IKAROS_DEV_DOMAIN=https://app-dev.ikarosarchaeology.com
IKAROS_PROD_PORT=8081
IKAROS_PROD_KC_REALM=ikaros
IKAROS_PROD_KC_CLIENT=ikaroslocal
IKAROS_DEV_PORT=8082
IKAROS_DEV_DEBUG_PORT=9229
IKAROS_DEV_KC_REALM=ikarosdev
IKAROS_DEV_KC_CLIENT=ikaroslocal
IKAROS_GEONAMES_API=YourAPIKey

# Ikaros media server env vars

WEBHOOK_DOCKERFILE=Dockerfile.webhook
WEBHOOK_PORT=3006

# Ikaros custom api env vars

API_DOCKERFILE=Dockerfile.api
API_PORT=3003


# Ikaros media server env vars

MEDIASERVER_DOCKERFILE=Dockerfile.mediaserver
MEDIASERVER_PORT=3004


# Nginx Proxy Manager env vars

NPM_HTTP=80
NPM_HTTPS=443
NPM_ADMIN=81

# Backup service env vars
BACKUP_RETENTION_HOURLY=24
BACKUP_RETENTION_DAILY=7
BACKUP_RETENTION_WEEKLY=4
BACKUP_RETENTION_MONTHLY=12
RESTORE_DB_DAILY=restored_daily
RESTORE_DB_WEEKLY=restored_weekly
BACKUP_DATABASES="data,keycloak" # Comma-separated list of databases to back up
RESTORE_DATABASE="data" # Database to restore for daily and weekly restores
